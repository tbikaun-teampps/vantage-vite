-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.assessment_objectives (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  assessment_id bigint NOT NULL,
  company_id bigint NOT NULL,
  title character varying NOT NULL,
  description character varying,
  is_deleted boolean NOT NULL DEFAULT false,
  deleted_at timestamp with time zone,
  CONSTRAINT assessment_objectives_pkey PRIMARY KEY (id),
  CONSTRAINT assessment_objectives_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT assessment_objectives_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT assessment_objectives_assessment_id_fkey FOREIGN KEY (assessment_id) REFERENCES public.assessments(id)
);
CREATE TABLE public.assessments (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  questionnaire_id bigint NOT NULL,
  name character varying NOT NULL,
  description character varying,
  status character varying NOT NULL,
  start_date timestamp with time zone,
  end_date timestamp with time zone,
  created_by uuid NOT NULL,
  company_id bigint NOT NULL,
  business_unit_id bigint NOT NULL,
  region_id bigint NOT NULL,
  site_id bigint NOT NULL,
  asset_group_id bigint NOT NULL,
  type character varying NOT NULL DEFAULT 'onsite'::character varying CHECK (type::text = ANY (ARRAY['onsite'::character varying, 'desktop'::character varying]::text[])),
  CONSTRAINT assessments_pkey PRIMARY KEY (id),
  CONSTRAINT assessments_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT assessments_asset_group_id_fkey FOREIGN KEY (asset_group_id) REFERENCES public.asset_groups(id),
  CONSTRAINT assessments_business_unit_id_fkey FOREIGN KEY (business_unit_id) REFERENCES public.business_units(id),
  CONSTRAINT assessments_region_id_fkey FOREIGN KEY (region_id) REFERENCES public.regions(id),
  CONSTRAINT assessments_questionnaire_id_fkey FOREIGN KEY (questionnaire_id) REFERENCES public.questionnaires(id),
  CONSTRAINT assessments_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.sites(id),
  CONSTRAINT assessments_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.asset_groups (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  site_id bigint NOT NULL,
  name character varying NOT NULL,
  description character varying,
  code character varying,
  asset_type character varying,
  company_id bigint NOT NULL,
  CONSTRAINT asset_groups_pkey PRIMARY KEY (id),
  CONSTRAINT asset_groups_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT asset_groups_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.sites(id),
  CONSTRAINT asset_groups_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.business_units (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  name character varying NOT NULL,
  code character varying,
  description character varying,
  company_id bigint NOT NULL,
  manager character varying,
  CONSTRAINT business_units_pkey PRIMARY KEY (id),
  CONSTRAINT business_units_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT business_units_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.companies (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  name character varying NOT NULL,
  created_by uuid NOT NULL,
  code character varying,
  description character varying,
  icon_url character varying,
  is_deleted boolean NOT NULL DEFAULT false,
  deleted_at timestamp with time zone,
  deleted_by uuid,
  is_demo boolean NOT NULL DEFAULT false,
  CONSTRAINT companies_pkey PRIMARY KEY (id),
  CONSTRAINT company_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT companies_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id)
);
CREATE TABLE public.feedback (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  message character varying NOT NULL,
  page_url character varying NOT NULL,
  type character varying NOT NULL DEFAULT ''::character varying,
  CONSTRAINT feedback_pkey PRIMARY KEY (id),
  CONSTRAINT feedback_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.interview_response_actions (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  company_id bigint NOT NULL,
  title character varying,
  description character varying NOT NULL,
  interview_response_id bigint NOT NULL,
  created_by uuid NOT NULL,
  CONSTRAINT interview_response_actions_pkey PRIMARY KEY (id),
  CONSTRAINT interview_response_actions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT interview_response_actions_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT interview_response_actions_interview_response_id_fkey FOREIGN KEY (interview_response_id) REFERENCES public.interview_responses(id)
);
CREATE TABLE public.interview_response_roles (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL DEFAULT gen_random_uuid(),
  role_id bigint NOT NULL,
  interview_response_id bigint NOT NULL,
  company_id bigint NOT NULL,
  CONSTRAINT interview_response_roles_pkey PRIMARY KEY (id),
  CONSTRAINT interview_response_roles_interview_response_id_fkey FOREIGN KEY (interview_response_id) REFERENCES public.interview_responses(id),
  CONSTRAINT interview_response_roles_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id),
  CONSTRAINT interview_response_roles_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT interview_response_roles_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.interview_responses (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  rating_score smallint,
  comments character varying,
  answered_at timestamp with time zone,
  created_by uuid NOT NULL,
  interview_id bigint NOT NULL,
  questionnaire_question_id bigint NOT NULL,
  company_id bigint NOT NULL,
  CONSTRAINT interview_responses_pkey PRIMARY KEY (id),
  CONSTRAINT interview_responses_survey_question_id_fkey FOREIGN KEY (questionnaire_question_id) REFERENCES public.questionnaire_questions(id),
  CONSTRAINT interview_responses_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT interview_responses_interview_id_fkey FOREIGN KEY (interview_id) REFERENCES public.interviews(id),
  CONSTRAINT interview_responses_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.interview_roles (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  interview_id bigint NOT NULL,
  role_id bigint NOT NULL,
  company_id bigint NOT NULL,
  CONSTRAINT interview_roles_pkey PRIMARY KEY (id),
  CONSTRAINT interview_roles_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id),
  CONSTRAINT interview_roles_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT interview_roles_interview_id_fkey FOREIGN KEY (interview_id) REFERENCES public.interviews(id),
  CONSTRAINT interview_roles_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.interviews (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  interviewer_id uuid NOT NULL,
  assessment_id bigint NOT NULL,
  status character varying NOT NULL DEFAULT 'pending'::character varying,
  notes character varying,
  company_id bigint NOT NULL,
  name character varying NOT NULL DEFAULT 'Interview'::character varying,
  interviewee_count smallint NOT NULL DEFAULT '0'::smallint,
  CONSTRAINT interviews_pkey PRIMARY KEY (id),
  CONSTRAINT interviews_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT interviews_assessment_id_fkey FOREIGN KEY (assessment_id) REFERENCES public.assessments(id),
  CONSTRAINT interviews_auditor_fkey FOREIGN KEY (interviewer_id) REFERENCES auth.users(id),
  CONSTRAINT interviews_interviewer_id_fkey FOREIGN KEY (interviewer_id) REFERENCES public.profiles(id),
  CONSTRAINT interviews_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.org_charts (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  site_id bigint NOT NULL,
  chart_type character varying DEFAULT 'operational'::character varying,
  description character varying,
  is_active boolean NOT NULL DEFAULT true,
  code character varying,
  name character varying NOT NULL,
  company_id bigint NOT NULL,
  CONSTRAINT org_charts_pkey PRIMARY KEY (id),
  CONSTRAINT org_charts_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT org_charts_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT org_charts_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.sites(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  full_name text,
  is_demo_mode boolean NOT NULL DEFAULT true,
  demo_progress jsonb NOT NULL DEFAULT '{"welcomeShown": false, "toursCompleted": [], "featuresExplored": []}'::jsonb,
  demo_disabled_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  is_admin boolean NOT NULL DEFAULT false,
  is_internal boolean NOT NULL DEFAULT true,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.program_objectives (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  program_id bigint NOT NULL,
  company_id bigint NOT NULL,
  name character varying NOT NULL,
  description character varying,
  CONSTRAINT program_objectives_pkey PRIMARY KEY (id),
  CONSTRAINT program_objectives_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT program_objectives_program_id_fkey FOREIGN KEY (program_id) REFERENCES public.programs(id),
  CONSTRAINT program_objectives_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.programs (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  name character varying NOT NULL,
  description character varying,
  company_id bigint NOT NULL,
  scope_level character varying NOT NULL CHECK (scope_level::text = ANY (ARRAY['company'::character varying, 'business_unit'::character varying, 'region'::character varying, 'site'::character varying, 'asset_groups'::character varying, 'org_charts'::character varying]::text[])),
  CONSTRAINT programs_pkey PRIMARY KEY (id),
  CONSTRAINT programs_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT programs_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.questionnaire_question_rating_scales (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  questionnaire_question_id bigint NOT NULL,
  questionnaire_rating_scale_id bigint NOT NULL,
  description character varying NOT NULL,
  CONSTRAINT questionnaire_question_rating_scales_pkey PRIMARY KEY (id),
  CONSTRAINT questionnaire_question_rating_sc_questionnaire_question_id_fkey FOREIGN KEY (questionnaire_question_id) REFERENCES public.questionnaire_questions(id),
  CONSTRAINT questionnaire_question_rating_questionnaire_rating_scale_i_fkey FOREIGN KEY (questionnaire_rating_scale_id) REFERENCES public.questionnaire_rating_scales(id),
  CONSTRAINT question_rating_scales_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.questionnaire_question_roles (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL DEFAULT gen_random_uuid(),
  questionnaire_question_id bigint NOT NULL,
  shared_role_id bigint NOT NULL,
  CONSTRAINT questionnaire_question_roles_pkey PRIMARY KEY (id),
  CONSTRAINT qustionnaire_question_roles_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT qustionnaire_question_roles_shared_role_id_fkey FOREIGN KEY (shared_role_id) REFERENCES public.shared_roles(id),
  CONSTRAINT qustionnaire_question_roles_questionnaire_question_id_fkey FOREIGN KEY (questionnaire_question_id) REFERENCES public.questionnaire_questions(id)
);
CREATE TABLE public.questionnaire_questions (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  questionnaire_step_id bigint NOT NULL,
  question_text character varying NOT NULL,
  context character varying,
  order_index smallint NOT NULL,
  created_by uuid NOT NULL,
  title character varying NOT NULL,
  CONSTRAINT questionnaire_questions_pkey PRIMARY KEY (id),
  CONSTRAINT survey_questions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT questionnaire_questions_questionnaire_step_id_fkey FOREIGN KEY (questionnaire_step_id) REFERENCES public.questionnaire_steps(id)
);
CREATE TABLE public.questionnaire_rating_scales (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  name character varying NOT NULL,
  description character varying,
  order_index smallint NOT NULL,
  value smallint NOT NULL,
  created_by uuid NOT NULL,
  questionnaire_id bigint NOT NULL,
  CONSTRAINT questionnaire_rating_scales_pkey PRIMARY KEY (id),
  CONSTRAINT survey_rating_scales_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT questionnaire_rating_scales_questionnaire_id_fkey FOREIGN KEY (questionnaire_id) REFERENCES public.questionnaires(id)
);
CREATE TABLE public.questionnaire_sections (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  questionnaire_id bigint NOT NULL,
  title character varying NOT NULL,
  order_index smallint NOT NULL,
  expanded boolean NOT NULL,
  created_by uuid NOT NULL,
  CONSTRAINT questionnaire_sections_pkey PRIMARY KEY (id),
  CONSTRAINT survey_sections_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT questionnaire_sections_questionnaire_id_fkey FOREIGN KEY (questionnaire_id) REFERENCES public.questionnaires(id)
);
CREATE TABLE public.questionnaire_steps (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  title character varying NOT NULL,
  order_index smallint NOT NULL,
  expanded boolean NOT NULL DEFAULT true,
  questionnaire_section_id bigint NOT NULL,
  created_by uuid NOT NULL,
  CONSTRAINT questionnaire_steps_pkey PRIMARY KEY (id),
  CONSTRAINT survey_steps_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT questionnaire_steps_questionnaire_section_id_fkey FOREIGN KEY (questionnaire_section_id) REFERENCES public.questionnaire_sections(id)
);
CREATE TABLE public.questionnaires (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  name character varying NOT NULL,
  status character varying NOT NULL DEFAULT 'draft'::character varying,
  description character varying,
  created_by uuid NOT NULL,
  guidelines character varying,
  is_demo boolean DEFAULT false,
  CONSTRAINT questionnaires_pkey PRIMARY KEY (id),
  CONSTRAINT assessment_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.regions (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  business_unit_id bigint NOT NULL,
  name character varying NOT NULL,
  description character varying,
  code character varying,
  company_id bigint NOT NULL,
  CONSTRAINT regions_pkey PRIMARY KEY (id),
  CONSTRAINT regions_business_unit_id_fkey FOREIGN KEY (business_unit_id) REFERENCES public.business_units(id),
  CONSTRAINT regions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT regions_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.roles (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  org_chart_id bigint NOT NULL,
  level character varying,
  department character varying,
  description character varying,
  requirements character varying,
  sort_order smallint NOT NULL DEFAULT '0'::smallint,
  is_active boolean NOT NULL DEFAULT true,
  code character varying,
  reports_to_role_id bigint,
  company_id bigint NOT NULL,
  shared_role_id bigint,
  CONSTRAINT roles_pkey PRIMARY KEY (id),
  CONSTRAINT roles_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT roles_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT roles_org_chart_id_fkey FOREIGN KEY (org_chart_id) REFERENCES public.org_charts(id),
  CONSTRAINT roles_shared_role_id_fkey FOREIGN KEY (shared_role_id) REFERENCES public.shared_roles(id)
);
CREATE TABLE public.shared_roles (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  name character varying NOT NULL UNIQUE,
  description character varying,
  created_by uuid,
  CONSTRAINT shared_roles_pkey PRIMARY KEY (id),
  CONSTRAINT shared_roles_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.sites (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  name character varying NOT NULL,
  description character varying,
  code character varying,
  region_id bigint NOT NULL,
  lat double precision,
  lng double precision,
  company_id bigint NOT NULL,
  CONSTRAINT sites_pkey PRIMARY KEY (id),
  CONSTRAINT sites_region_id_fkey FOREIGN KEY (region_id) REFERENCES public.regions(id),
  CONSTRAINT sites_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT sites_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);