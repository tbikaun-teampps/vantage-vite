/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/openapi.json": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/profile": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/signin": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/signout": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Sign out the current user and invalidate their session */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/refresh": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Refresh access token using refresh token */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            refresh_token: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/session": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Validate current session and return enriched user data with re-authorization check */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/external/interview-token": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            interviewId: number;
            email: string;
            accessCode: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          companyId: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                description?: string | null;
                status: string;
                presite_questionnaire_id: number | null;
                onsite_questionnaire_id: number | null;
                measurements_count: number | null;
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                description?: string | null;
                status: string;
                presite_questionnaire_id: number | null;
                presite_questionnaire: {
                  id?: number;
                  name?: string;
                };
                onsite_questionnaire_id: number | null;
                onsite_questionnaire: {
                  id?: number;
                  name?: string;
                };
                measurements_count: number | null;
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
                phases: {
                  id?: number;
                  name?: string;
                  status?: string;
                  sequence_number?: number;
                  notes?: string | null;
                  program_id?: number;
                  /** Format: date-time */
                  planned_start_date?: string | null;
                  /** Format: date-time */
                  actual_start_date?: string | null;
                  /** Format: date-time */
                  planned_end_date?: string | null;
                  /** Format: date-time */
                  actual_end_date?: string | null;
                  /** Format: date-time */
                  created_at?: string;
                  /** Format: date-time */
                  updated_at?: string;
                }[];
              };
            };
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string;
            status?: string;
            presite_questionnaire_id?: number;
            onsite_questionnaire_id?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}/phases": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            /** @default false */
            activate?: boolean;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}/phases/{phaseId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
          phaseId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            status?: string;
            notes?: string;
            /** Format: date-time */
            planned_start_date?: string;
            /** Format: date-time */
            actual_start_date?: string;
            /** Format: date-time */
            planned_end_date?: string;
            /** Format: date-time */
            actual_end_date?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}/interviews": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            phaseId: number;
            /** @default false */
            isIndividual?: boolean;
            roleIds: number[];
            contactIds: number[];
            /** @enum {string} */
            interviewType: "onsite" | "presite";
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                success?: boolean;
                message?: string;
                interviewsCreated?: number;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}/objectives": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all objectives for a program */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                created_at?: string;
                description?: string | null;
                id?: number;
                name?: string;
                updated_at?: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    /** @description Create a new objective for a program */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}/objectives/{objectiveId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update a program objective */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
          objectiveId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete a program objective */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
          objectiveId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}/objectives/count": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get the count of objectives for a program */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: number;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/programs/{programId}/measurements": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          includeDefinitions?: boolean;
        };
        header?: never;
        path: {
          programId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/entities": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all entities for a company */
    get: {
      parameters: {
        query: {
          type:
            | "business-units"
            | "regions"
            | "sites"
            | "asset-groups"
            | "work-groups"
            | "roles";
        };
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                [key: string]: unknown;
              }[];
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    /** @description Create a new entity under the specified company */
    post: {
      parameters: {
        query: {
          type:
            | "business-units"
            | "regions"
            | "sites"
            | "asset-groups"
            | "work-groups"
            | "roles";
        };
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                [key: string]: unknown;
              }[];
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/entities/{entityId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update an entity under the specified company */
    put: {
      parameters: {
        query: {
          type:
            | "business-units"
            | "regions"
            | "sites"
            | "asset-groups"
            | "work-groups"
            | "roles";
        };
        header?: never;
        path: {
          companyId: string;
          entityId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                [key: string]: unknown;
              }[];
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete an entity under the specified company */
    delete: {
      parameters: {
        query: {
          type:
            | "business-units"
            | "regions"
            | "sites"
            | "asset-groups"
            | "work-groups"
            | "roles";
        };
        header?: never;
        path: {
          companyId: string;
          entityId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/contacts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all contacts for a company */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                full_name: string;
                email: string;
                phone: string;
                title: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/contacts/{entityType}/{entityId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all contacts for a specific entity */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          entityType:
            | "company"
            | "business-unit"
            | "region"
            | "site"
            | "asset-group"
            | "work-group"
            | "role";
          entityId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                full_name: string;
                email: string;
                phone: string;
                title: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    /** @description Create a new contact and link it to an entity */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          entityType:
            | "company"
            | "business-unit"
            | "region"
            | "site"
            | "asset-group"
            | "work-group"
            | "role";
          entityId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            full_name: string;
            /** Format: email */
            email: string;
            phone?: string;
            title?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                full_name: string;
                email: string;
                phone: string;
                title: string;
                company_id: string;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/contacts/{contactId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update an existing contact */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          contactId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            full_name?: string;
            /** Format: email */
            email?: string;
            phone?: string;
            title?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                full_name: string;
                email: string;
                phone: string;
                title: string;
                company_id: string;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/contacts/{entityType}/{entityId}/{contactId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Unlink contact from entity and delete if no other links exist */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          entityType:
            | "company"
            | "business-unit"
            | "region"
            | "site"
            | "asset-group"
            | "work-group"
            | "role";
          entityId: string;
          contactId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/contacts/roles/{roleId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          roleId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/team": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all team members for a company */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                user_id: string;
                company_id: string;
                role: string;
                created_at: string;
                updated_at: string;
                user: {
                  id: string;
                  email: string;
                  full_name: string | null;
                };
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    /** @description Add a team member to a company */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
            role: "owner" | "admin" | "viewer" | "interviewee";
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                user_id: string;
                company_id: string;
                role: string;
                created_at: string;
                updated_at: string;
                user: {
                  id: string;
                  email: string;
                  full_name: string | null;
                };
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/team/{userId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update a team member's role */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          userId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            role: "owner" | "admin" | "viewer" | "interviewee";
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                user_id: string;
                company_id: string;
                role: string;
                created_at: string;
                updated_at: string;
                user: {
                  id: string;
                  email: string;
                  full_name: string | null;
                };
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Remove a team member from a company */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          userId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all companies */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: string;
                name: string;
                code: string;
                description: string;
                created_at: string;
                updated_at: string;
                role: string;
                is_demo: boolean;
                icon_url?: string;
                branding: {
                  primary?: string;
                  secondary?: string;
                  accent?: string;
                };
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            code?: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: string;
                name: string;
                code: string;
                description: string;
                created_at: string;
                updated_at: string;
                role: string;
                is_demo: boolean;
                icon_url?: string;
                branding: {
                  primary?: string;
                  secondary?: string;
                  accent?: string;
                };
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: string;
                name: string;
                code: string;
                description: string;
                created_at: string;
                updated_at: string;
                role: string;
                is_demo: boolean;
                icon_url?: string;
                branding: {
                  primary?: string;
                  secondary?: string;
                  accent?: string;
                };
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            code?: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: string;
                name: string;
                code: string;
                description: string;
                created_at: string;
                updated_at: string;
                is_demo: boolean;
                icon_url?: string;
                branding: {
                  primary?: string;
                  secondary?: string;
                  accent?: string;
                };
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/tree": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get company tree structure */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/assessments": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Retrieve a list of assessments
     * @description Get all assessments for a given company with optional filters
     */
    get: {
      parameters: {
        query?: {
          /** @description Filter by assessment type */
          type?: "onsite" | "desktop";
          /** @description Filter by assessment status */
          status?: ("draft" | "in_progress" | "completed")[];
          /** @description Search assessments by name or description */
          search?: string;
        };
        header?: never;
        path: {
          /** @description ID of the company */
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/recommendations": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all recommendations for a company */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/export": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Export company structure as JSON */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/import": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                [key: string]: unknown;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/actions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/questionnaires": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                description: string;
                guidelines: string;
                status: string;
                created_at: string;
                updated_at: string;
                section_count: number;
                step_count: number;
                question_count: number;
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/icon": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Upload or replace company icon */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                icon_url: string;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    /** @description Remove company icon */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/companies/{companyId}/branding": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    /** @description Update company branding colors */
    patch: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            primary?: string;
            secondary?: string;
            accent?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: string;
                name: string;
                code: string;
                description: string;
                created_at: string;
                updated_at: string;
                is_demo: boolean;
                icon_url?: string;
                branding: {
                  primary?: string;
                  secondary?: string;
                  accent?: string;
                };
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    trace?: never;
  };
  "/shared/measurement-definitions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/shared/roles": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all shared roles (system roles + user-created roles) */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string | null;
                read_only?: boolean;
                created_at?: string;
                updated_at?: string;
                created_by?: string | null;
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    /** @description Create a new shared role */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
            companyId: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string | null;
                created_at?: string;
                updated_at?: string;
                created_by?: string | null;
                is_deleted?: boolean;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/shared/roles/{roleId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update an existing shared role */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          roleId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string | null;
                created_at?: string;
                updated_at?: string;
                created_by?: string | null;
                is_deleted?: boolean;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete a shared role (soft delete) */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          roleId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/{questionnaireId}/rating-scales": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get rating scales for a questionnaire */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string;
                value?: number;
                order_index?: number;
                /** Format: date-time */
                created_at?: string;
                /** Format: date-time */
                updated_at?: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/{questionnaireId}/rating-scales/batch": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Add multiple rating scales to a questionnaire at once */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            scales: {
              name: string;
              description?: string;
              value: number;
              order_index: number;
            }[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string;
                value?: number;
                order_index?: number;
                /** Format: date-time */
                created_at?: string;
                /** Format: date-time */
                updated_at?: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/{questionnaireId}/rating-scale": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Add a rating scale to a questionnaire */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
            value: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/rating-scales/{ratingScaleId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update a rating scale in a questionnaire */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          ratingScaleId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string;
            value?: number;
            order_index?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string;
                value?: number;
                order_index?: number;
                /** Format: date-time */
                created_at?: string;
                /** Format: date-time */
                updated_at?: string;
              };
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete a rating scale from a questionnaire */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          ratingScaleId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/sections": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Create a new section in a questionnaire */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            questionnaire_id: number;
            title: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/sections/{sectionId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update a section in a questionnaire */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          sectionId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            title?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                title?: string;
              };
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete a section in a questionnaire */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          sectionId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/steps": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Create a new step in a section */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            questionnaire_section_id: number;
            title: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/steps/{stepId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update a step in a questionnaire */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stepId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            title?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete a step in a questionnaire */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stepId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/questions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Create a new question in a step */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            questionnaire_step_id: number;
            title?: string;
            question_text: string;
            context?: string;
            order_index?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/questions/{questionId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update a question in a questionnaire */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            title?: string;
            question_text?: string;
            context?: string;
            order_index?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                title?: string;
                question_text?: string;
                context?: string;
                order_index?: number;
                /** Format: date-time */
                created_at?: string;
                /** Format: date-time */
                updated_at?: string;
              };
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete a question in a questionnaire */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/questions/{questionId}/duplicate": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Duplicate a question in a questionnaire */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/questions/{questionId}/rating-scales": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Add rating scale to a question */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            questionnaire_rating_scale_id: number;
            description: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/questions/{questionId}/rating-scales/{questionRatingScaleId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update a question rating scale */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionRatingScaleId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            description: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                description?: string;
                /** Format: date-time */
                created_at?: string;
                /** Format: date-time */
                updated_at?: string;
                questionnaire_rating_scale_id?: number;
                questionnaire_question_id?: number;
                questionnaire_id?: number;
              };
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Delete a question rating scale */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionRatingScaleId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/questions/{questionId}/add-questionnaire-rating-scales": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Add all rating scales from the questionnaire to a question */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            questionnaireId: number;
            questionId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: Record<string, never>[];
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/questions/{questionId}/applicable-roles": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update applicable roles for a question */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            shared_role_ids: number[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                shared_role_id?: number;
                name?: string;
                description?: string;
                /** Format: date-time */
                created_at?: string;
                /** Format: date-time */
                updated_at?: string;
                questionnaire_question_id?: number;
              }[];
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/{questionnaireId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get a questionnaire by ID */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    /** @description Update a questionnaire by ID */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string;
            guidelines?: string;
            status?: "draft" | "active" | "under_review" | "archived";
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                description: string;
                guidelines: string;
                status: string;
                created_at: string;
                updated_at: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    /** @description Soft delete a questionnaire by ID */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Create a new questionnaire */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
            guidelines?: string;
            company_id?: string;
            status?: "draft" | "active" | "under_review" | "archived";
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                description: string;
                guidelines: string;
                status: string;
                created_at: string;
                updated_at: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/{questionnaireId}/duplicate": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Duplicate a questionnaire by ID */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                description: string;
                guidelines: string;
                status: string;
                created_at: string;
                updated_at: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/{questionnaireId}/usage": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/questionnaires/import": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/me": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get current authenticated user and profile */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              user: {
                id: string;
                email: string;
              };
              profile: {
                full_name: string;
                is_admin: boolean;
                subscription_tier: string;
                subscription_features: {
                  maxCompanies: number;
                };
                onboarded: boolean;
                onboarded_at: string;
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/subscription/{subscription_tier}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update user subscription */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          subscription_tier: "demo" | "consultant" | "enterprise";
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/profile": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Update user profile */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            full_name?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              profile?: {
                [key: string]: unknown;
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/onboarded": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** @description Mark user as onboarded */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: never;
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string | null;
            status?: string;
            business_unit_id?: number | null;
            region_id?: number | null;
            site_id?: number | null;
            asset_group_id?: number | null;
            /** Format: date-time */
            scheduled_at?: ((string | null) | null) | null;
            /** Format: date-time */
            started_at?: ((string | null) | null) | null;
            /** Format: date-time */
            completed_at?: ((string | null) | null) | null;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string;
                status?: string;
                type?: string;
                questionnaire_id?: number;
                company_id?: string;
                business_unit_id?: number;
                region_id?: number;
                site_id?: number;
                asset_group_id?: number;
                created_at?: string;
                updated_at?: string;
                interview_overview?: string;
              };
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/interviews": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/comments": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/evidence": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/actions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
            /** @enum {string} */
            type: "onsite" | "desktop";
            /** @default null */
            questionnaire_id?: ((number | null) | null) | null;
            company_id: string;
            /** @default null */
            business_unit_id?: ((number | null) | null) | null;
            /** @default null */
            region_id?: ((number | null) | null) | null;
            /** @default null */
            site_id?: ((number | null) | null) | null;
            /** @default null */
            asset_group_id?: ((number | null) | null) | null;
            objectives?: {
              title: string;
              description?: string;
            }[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string;
                status?: string;
                type?: string;
                questionnaire_id?: number;
                company_id?: string;
                business_unit_id?: number;
                region_id?: number;
                site_id?: number;
                asset_group_id?: number;
                created_at?: string;
                updated_at?: string;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/duplicate": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                description?: string;
                status?: string;
                type?: string;
                questionnaire_id?: number;
                company_id?: string;
                business_unit_id?: number;
                region_id?: number;
                site_id?: number;
                asset_group_id?: number;
                created_at?: string;
                updated_at?: string;
              };
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/measurements": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            measurement_definition_id: number;
            calculated_value: number;
            location?: {
              business_unit_id?: number;
              region_id?: number;
              site_id?: number;
              asset_group_id?: number;
              work_group_id?: number;
              role_id?: number;
            };
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/measurements/{measurementId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
          measurementId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            calculated_value?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
          measurementId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/assessments/{assessmentId}/measurements/bar-charts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                name?: string;
                data?: {
                  label?: string;
                  value?: number;
                }[];
              }[];
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/overall/heatmap/filters": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          companyId: string;
          assessmentType: "onsite" | "desktop";
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: never;
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/heatmap/overall-onsite": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          companyId: string;
          questionnaireId: string;
          assessmentId?: string;
          xAxis?:
            | "business_unit"
            | "region"
            | "site"
            | "asset_group"
            | "work_group"
            | "role"
            | "role_level"
            | "section"
            | "step"
            | "question";
          yAxis?:
            | "business_unit"
            | "region"
            | "site"
            | "asset_group"
            | "work_group"
            | "role"
            | "role_level"
            | "section"
            | "step"
            | "question";
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                xLabels?: string[];
                yLabels?: string[];
                metrics?: {
                  average_score?: {
                    data?: {
                      x?: string;
                      y?: string;
                      value?: number | null;
                      sampleSize?: number;
                      metadata?: Record<string, never>;
                    }[];
                    values?: (number | null)[];
                  };
                  total_interviews?: {
                    data?: {
                      x?: string;
                      y?: string;
                      value?: number | null;
                      sampleSize?: number;
                      metadata?: Record<string, never>;
                    }[];
                    values?: (number | null)[];
                  };
                  completion_rate?: {
                    data?: {
                      x?: string;
                      y?: string;
                      value?: number | null;
                      sampleSize?: number;
                      metadata?: Record<string, never>;
                    }[];
                    values?: (number | null)[];
                  };
                  total_actions?: {
                    data?: {
                      x?: string;
                      y?: string;
                      value?: number | null;
                      sampleSize?: number;
                      metadata?: Record<string, never>;
                    }[];
                    values?: (number | null)[];
                  };
                };
                config?: {
                  xAxis?: string;
                  yAxis?: string;
                  questionnaireId?: number;
                  assessmentId?: number | null;
                };
              };
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/heatmap/overall-desktop": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          companyId: string;
          assessmentId?: string;
          xAxis?:
            | "business_unit"
            | "region"
            | "site"
            | "asset_group"
            | "work_group"
            | "role"
            | "role_level";
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/geographical-map/overall-onsite": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          companyId: string;
          assessmentId?: string;
          questionnaireId: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                name?: string;
                lat?: number;
                lng?: number;
                region?: string;
                businessUnit?: string;
                score?: number;
                interviews?: number;
                totalActions?: number;
                completionRate?: number;
              }[];
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/geographical-map/overall-desktop": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          companyId: string;
          assessmentId?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: never;
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/overall/geographical-map/filters": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          companyId: string;
          assessmentType: "onsite" | "desktop";
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                options?: {
                  assessments?: {
                    id?: number;
                    name?: string;
                    questionnaireId?: number | null;
                  }[];
                  questionnaires?: {
                    id?: number;
                    name?: string;
                    assessmentIds?: number[];
                  }[];
                  measurements?: {
                    id?: number;
                    name?: string;
                  }[];
                  aggregationMethods?: ("average" | "sum" | "count")[];
                };
              };
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/heatmap/program-interviews/{programId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          questionnaireType: "presite" | "onsite";
        };
        header?: never;
        path: {
          programId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/dashboards/widgets/{companyId}/config-options": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get available options for widget configuration (assessments, programs, interviews) */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                assessments: {
                  id: number;
                  name: string;
                  status: string;
                }[];
                programs: {
                  id: number;
                  name: string;
                  status: string;
                }[];
                interviews: {
                  id: number;
                  name: string;
                  status: string;
                }[];
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/dashboards/widgets/{companyId}/activity": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get activity data for a widget (status breakdown) */
    get: {
      parameters: {
        query: {
          /** @description The type of entity to fetch activity data for */
          entityType: "interviews" | "assessments" | "programs";
        };
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                /** @description Total count of entities */
                total: number;
                /** @description Status breakdown with status names as keys and counts as values */
                breakdown: {
                  [key: string]: number;
                };
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/dashboards/widgets/{companyId}/metrics": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get metric data for a widget */
    get: {
      parameters: {
        query: {
          /** @description The type of metric to fetch */
          metricType:
            | "generated-actions"
            | "generated-recommendations"
            | "worst-performing-domain"
            | "high-risk-areas"
            | "assessment-activity";
          /** @description Optional custom title for the metric */
          title?: string;
        };
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                title: string;
                metricType: string;
                value: number | string;
                phaseBadge?: {
                  text: string;
                  color: string;
                  borderColor: string;
                };
                badges?: {
                  text: string;
                  color: string;
                  borderColor: string;
                  icon?: string;
                }[];
                secondaryMetrics?: {
                  value: number | string;
                  label: string;
                  icon?: string;
                }[];
                subtitle?: string;
                description?: string;
                trend?: number;
                status?: "up" | "down" | "neutral";
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/dashboards/widgets/{companyId}/table": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get table data for a widget */
    get: {
      parameters: {
        query: {
          /** @description The type of table data to fetch */
          entityType: "actions" | "recommendations" | "comments";
          /** @description Optional assessment ID for filtering */
          assessmentId?: number;
          /** @description Optional program ID for filtering */
          programId?: number;
        };
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                rows: {
                  [key: string]: string | number;
                }[];
                columns: {
                  key: string;
                  label: string;
                }[];
                scope?: {
                  assessmentName?: string;
                  programName?: string;
                };
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/dashboards/widgets/{companyId}/actions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get actions data for a widget */
    get: {
      parameters: {
        query: {
          /** @description The entity type for actions */
          entityType: string;
        };
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: string[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/dashboards/{companyId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all dashboards for a company */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                company_id: string;
                created_by: string;
                created_at: string;
                updated_at: string;
                is_deleted: boolean;
                deleted_at: string | null;
                widgets: {
                  [key: string]: unknown;
                }[];
                layout: {
                  [key: string]: unknown;
                }[];
              }[];
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    /** @description Create a new dashboard */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Dashboard name */
            name: string;
            /** @description Widget configurations */
            widgets: {
              id: string;
              widgetType: string;
              config: {
                [key: string]: unknown;
              };
            }[];
            /** @description React Grid Layout configuration */
            layout: {
              i: string;
              x: number;
              y: number;
              w: number;
              h: number;
            }[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                company_id: string;
                created_by: string;
                created_at: string;
                updated_at: string;
                is_deleted: boolean;
                deleted_at: string | null;
                widgets: {
                  [key: string]: unknown;
                }[];
                layout: {
                  [key: string]: unknown;
                }[];
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/dashboards/{companyId}/{dashboardId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get a specific dashboard by ID */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          dashboardId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                company_id: string;
                created_by: string;
                created_at: string;
                updated_at: string;
                is_deleted: boolean;
                deleted_at: string | null;
                widgets: {
                  [key: string]: unknown;
                }[];
                layout: {
                  [key: string]: unknown;
                }[];
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    /** @description Delete a dashboard (soft delete) */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          dashboardId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              message: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    /** @description Update a dashboard */
    patch: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          companyId: string;
          dashboardId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            /** @description Dashboard name */
            name?: string;
            /** @description Widget configurations */
            widgets?: {
              [key: string]: unknown;
            }[];
            /** @description React Grid Layout configuration */
            layout?: {
              [key: string]: unknown;
            }[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              data: {
                id: number;
                name: string;
                company_id: string;
                created_by: string;
                created_at: string;
                updated_at: string;
                is_deleted: boolean;
                deleted_at: string | null;
                widgets: {
                  [key: string]: unknown;
                }[];
                layout: {
                  [key: string]: unknown;
                }[];
              };
            };
          };
        };
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success: boolean;
              error: string;
            };
          };
        };
      };
    };
    trace?: never;
  };
  "/emails/send-interview-invitation": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Send an interview invitation email */
    post: {
      parameters: {
        query: {
          interviewId: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
              messageId?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/emails/send-interview-reminder": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Send an interview reminder email */
    post: {
      parameters: {
        query: {
          interviewId: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
              messageId?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/emails/send-team-member-invite": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Send a team member invitation email */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
            name?: string;
            role?: string;
            company_name?: string;
            invite_link?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
              messageId?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/emails/send-interview-summary": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Send an interviewee a digest/summary of their interview responses */
    post: {
      parameters: {
        query: {
          interviewId: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
              messageId?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/emails/send-test-email": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Send a test email to verify email service configuration */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            to: string;
            message?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
              messageId?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/feedback/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Submit user feedback or error report */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            message: string;
            /** @enum {string} */
            type?: "bug" | "feature" | "general" | "suggestion";
            page_url?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              message?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query: {
          company_id: string;
          assessment_id?: number;
          status?: string[];
          program_phase_id?: string;
          questionnaire_id?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            assessment_id: number;
            interviewer_id?: string | null;
            name: string;
            notes?: string | null;
            /** @default false */
            is_individual?: boolean;
            /** @default true */
            enabled?: boolean;
            access_code?: string | null;
            interview_contact_id?: number | null;
            role_ids?: number[];
          };
        };
      };
      responses: never;
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/individual": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            assessment_id: number;
            interview_contact_ids: number[];
            name: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                assessment_id?: number;
                questionnaire_id?: number;
                interviewer_id?: string | null;
                name?: string;
                is_individual?: boolean;
                access_code?: string | null;
                interview_contact_id?: number | null;
                created_at?: string;
                updated_at?: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/{interviewId}/structure": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                interview?: {
                  id?: number;
                  name?: string;
                  questionnaire_id?: number;
                  assessment_id?: number;
                  is_individual?: boolean;
                };
                sections?: unknown[];
              };
            };
          };
        };
        /** @description Default Response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/{interviewId}/summary": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                name?: string;
                status?: string;
                notes?: string | null;
                is_individual?: boolean;
                overview?: string | null;
                due_at?: string | null;
                interviewer?: {
                  full_name?: string;
                  email?: string;
                } | null;
                interviewee?: {
                  full_name?: string;
                  email?: string;
                } | null;
                assessment?: {
                  id?: number;
                  name?: string;
                };
                company?: {
                  id?: string;
                  name?: string;
                  icon_url?: string | null;
                  branding?: {
                    [key: string]: unknown;
                  } | null;
                } | null;
                interview_roles?: {
                  role?: {
                    id?: number;
                    shared_role?: {
                      id?: number;
                      name?: string;
                    };
                  };
                }[];
              };
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/{interviewId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            status?: string;
            notes?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/{interviewId}/progress": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                status: string;
                previous_status?: string;
                total_questions: number;
                answered_questions: number;
                progress_percentage: number;
                responses: {
                  [key: string]: {
                    id?: number;
                    rating_score?: number | null;
                    is_applicable?: boolean;
                    has_rating_score?: boolean;
                    has_roles?: boolean;
                    is_unknown?: boolean;
                  };
                };
              };
            };
          };
        };
        /** @description Default Response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/{interviewId}/questions/{questionId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
          questionId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/{interviewId}/complete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          interviewId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            feedback?: Record<string, never> | null;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/responses/{responseId}/actions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            title?: string;
            description: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                title?: string;
                description?: string;
                created_at?: string;
                updated_at?: string;
              };
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/responses/{responseId}/actions/{actionId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
          actionId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            title?: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                title?: string;
                description?: string;
                created_at?: string;
                updated_at?: string;
              };
            };
          };
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
          actionId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/responses/{responseId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            rating_score?: number | null;
            role_ids?: ((number[] | null) | null) | null;
            is_unknown?: boolean | null;
          };
        };
      };
      responses: never;
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/responses/{responseId}/comments": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            comments: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                id?: number;
                comments?: string;
                created_at?: string;
                updated_at?: string;
              };
            };
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/responses/{responseId}/evidence": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              data?: {
                evidence?: Record<string, never>;
                publicUrl?: string;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              success?: boolean;
              error?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/responses/{responseId}/evidence/{evidenceId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          responseId: string;
          evidenceId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/assessment-roles/{assessmentId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          assessmentId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/assessment-roles/validate": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/interviews/questionnaires/{questionnaireId}/validate-roles": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          questionnaireId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Default Response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    400: {
      success: boolean;
      error: string;
    };
    401: {
      success: boolean;
      error: string;
    };
    403: {
      success: boolean;
      error: string;
    };
    404: {
      success: boolean;
      error: string;
    };
    500: {
      success: boolean;
      error: string;
    };
    createCompany: {
      name: string;
      code?: string;
      description?: string;
    };
    updateCompany: {
      name?: string;
      code?: string;
      description?: string;
    };
    createContact: {
      full_name: string;
      /** Format: email */
      email: string;
      phone?: string;
      title?: string;
    };
    updateContact: {
      full_name?: string;
      /** Format: email */
      email?: string;
      phone?: string;
      title?: string;
    };
    addTeamMember: {
      /** Format: email */
      email: string;
      role: "owner" | "admin" | "viewer" | "interviewee";
    };
    updateTeamMember: {
      role: "owner" | "admin" | "viewer" | "interviewee";
    };
    company: {
      id: string;
      name: string;
      code: string;
      description: string;
      created_at: string;
      updated_at: string;
      role: string;
      is_demo: boolean;
      icon_url?: string;
      branding: {
        primary?: string;
        secondary?: string;
        accent?: string;
      };
    };
    companyList: {
      success: boolean;
      data: {
        id: string;
        name: string;
        code: string;
        description: string;
        created_at: string;
        updated_at: string;
        role: string;
        is_demo: boolean;
        icon_url?: string;
        branding: {
          primary?: string;
          secondary?: string;
          accent?: string;
        };
      }[];
    };
    companyWithRoleDetail: {
      success: boolean;
      data: {
        id: string;
        name: string;
        code: string;
        description: string;
        created_at: string;
        updated_at: string;
        role: string;
        is_demo: boolean;
        icon_url?: string;
        branding: {
          primary?: string;
          secondary?: string;
          accent?: string;
        };
      };
    };
    companyDetail: {
      success: boolean;
      data: {
        id: string;
        name: string;
        code: string;
        description: string;
        created_at: string;
        updated_at: string;
        is_demo: boolean;
        icon_url?: string;
        branding: {
          primary?: string;
          secondary?: string;
          accent?: string;
        };
      };
    };
    entityList: {
      success: boolean;
      data: {
        [key: string]: unknown;
      }[];
    };
    companyTree: {
      success: boolean;
      data: {
        [key: string]: unknown;
      };
    };
    contactList: {
      success: boolean;
      data: {
        id: number;
        full_name: string;
        email: string;
        phone: string;
        title: string;
      }[];
    };
    contactDetail: {
      success: boolean;
      data: {
        id: number;
        full_name: string;
        email: string;
        phone: string;
        title: string;
        company_id: string;
      };
    };
    teamMemberList: {
      success: boolean;
      data: {
        id: number;
        user_id: string;
        company_id: string;
        role: string;
        created_at: string;
        updated_at: string;
        user: {
          id: string;
          email: string;
          full_name: string | null;
        };
      }[];
    };
    teamMemberDetail: {
      success: boolean;
      data: {
        id: number;
        user_id: string;
        company_id: string;
        role: string;
        created_at: string;
        updated_at: string;
        user: {
          id: string;
          email: string;
          full_name: string | null;
        };
      };
    };
    iconUpload: {
      success: boolean;
      data: {
        icon_url: string;
      };
    };
    dashboard: {
      id: number;
      name: string;
      company_id: string;
      created_by: string;
      created_at: string;
      updated_at: string;
      is_deleted: boolean;
      deleted_at: string | null;
      widgets: {
        [key: string]: unknown;
      }[];
      layout: {
        [key: string]: unknown;
      }[];
    };
    dashboardList: {
      success: boolean;
      data: {
        id: number;
        name: string;
        company_id: string;
        created_by: string;
        created_at: string;
        updated_at: string;
        is_deleted: boolean;
        deleted_at: string | null;
        widgets: {
          [key: string]: unknown;
        }[];
        layout: {
          [key: string]: unknown;
        }[];
      }[];
    };
    dashboardSingle: {
      success: boolean;
      data: {
        id: number;
        name: string;
        company_id: string;
        created_by: string;
        created_at: string;
        updated_at: string;
        is_deleted: boolean;
        deleted_at: string | null;
        widgets: {
          [key: string]: unknown;
        }[];
        layout: {
          [key: string]: unknown;
        }[];
      };
    };
    dashboardDeleted: {
      success: boolean;
      message: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
